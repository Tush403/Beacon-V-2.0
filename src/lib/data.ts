
import type { Tool, FilterOptions, TrendData, ApplicationType, TestType, OperatingSystem, CodingRequirement, CodingLanguage, PricingModel, ReportingAnalytics, RoiTimePoint, ComparisonParameter } from './types';
import { ALL_FILTER_VALUE } from '../lib/constants';

export const ALL_APPLICATION_TYPES: ApplicationType[] = ["Web", "Mobile", "API", "Desktop", "Backend"];
export const ALL_TEST_TYPES: TestType[] = ["UI Testing", "API Testing", "Performance Testing", "Security Testing", "Unit Testing", "E2E Testing"];
export const ALL_OPERATING_SYSTEMS: OperatingSystem[] = ["Windows", "macOS", "Linux", "Android", "iOS", "Cross-Platform"];
export const ALL_CODING_REQUIREMENTS: CodingRequirement[] = ["No-Code", "Low-Code", "Scripting", "AI/ML"];
export const ALL_CODING_LANGUAGES: CodingLanguage[] = ["JavaScript", "Python", "Java", "C#", "Ruby", "Go", "Swift", "Kotlin", "PHP", "N/A"];
export const ALL_PRICING_MODELS: PricingModel[] = ["Free", "Freemium", "Subscription", "One-time Purchase", "Open Source"];
export const ALL_REPORTING_ANALYTICS: ReportingAnalytics[] = ["Basic", "Advanced", "Customizable", "Integration-friendly", "Real-time"];


export const filterOptionsData: FilterOptions = {
  applicationTypes: [{ value: ALL_FILTER_VALUE, label: "All Applications" }, ...ALL_APPLICATION_TYPES.map(val => ({ value: val, label: val }))],
  testTypes: [{ value: ALL_FILTER_VALUE, label: "All Test Types" }, ...ALL_TEST_TYPES.map(val => ({ value: val, label: val }))],
  operatingSystems: [{ value: ALL_FILTER_VALUE, label: "All OS" }, ...ALL_OPERATING_SYSTEMS.map(val => ({ value: val, label: val }))],
  codingRequirements: [{ value: ALL_FILTER_VALUE, label: "Any Requirement" }, ...ALL_CODING_REQUIREMENTS.map(val => ({ value: val, label: val }))],
  codingLanguages: [{ value: ALL_FILTER_VALUE, label: "Any Language" }, ...ALL_CODING_LANGUAGES.map(val => ({ value: val, label: val }))],
  pricingModels: [{ value: ALL_FILTER_VALUE, label: "Any Model" }, ...ALL_PRICING_MODELS.map(val => ({ value: val, label: val }))],
  reportingAnalytics: [{ value: ALL_FILTER_VALUE, label: "Any Analytics" }, ...ALL_REPORTING_ANALYTICS.map(val => ({ value: val, label: val }))],
};

export const mockToolsData: Tool[] = [
  {
    id: "1",
    name: "Selenium",
    score: 8.7,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "Selenium logo",
    applicationTypes: ["Web"],
    testTypes: ["UI Testing", "E2E Testing"],
    operatingSystems: ["Windows", "macOS", "Linux", "Cross-Platform"],
    codingRequirements: ["Scripting"],
    codingLanguages: ["Java", "Python", "C#", "Ruby", "JavaScript"],
    pricingModels: ["Open Source"],
    reportingAnalytics: ["Basic", "Integration-friendly"],
    strengths: ["Highly flexible and extensible", "Large community support", "Supports multiple languages"],
    weaknesses: ["Steep learning curve", "Requires coding knowledge", "Setup can be complex"],
    pdfLink: "/pdfs/selenium-guide.pdf",
    websiteUrl: "https://www.selenium.dev/",
    roiProjection: [
      { month: 1, roi: 50 }, { month: 2, roi: 55 }, { month: 3, roi: 62 },
      { month: 4, roi: 70 }, { month: 5, roi: 75 }, { month: 6, roi: 78 }
    ],
    initialSetupTime: "3-5 days",
    maintenanceOverhead: "High - Requires skilled engineers for script maintenance",
    testCreationSpeed: "Moderate - Depends on element locator strategy and framework",
    scriptReusability: "High - With proper design patterns (e.g., Page Object Model)",
    parallelExecutionSupport: "Excellent - Via Selenium Grid or cloud providers",
    testCaseCreationEffort: "Moderate to High - Pure scripting approach",
    skillRequirement: "High - Strong coding skills (Java, Python, C# etc.) needed",
    overallAutomationCoverage: "Very High - Can automate almost any web interaction",
    totalCostOfOwnership: "Medium - Open source, but skilled resource costs can be high",
  },
  {
    id: "2",
    name: "Playwright",
    score: 9.2,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "Playwright logo",
    applicationTypes: ["Web"],
    testTypes: ["UI Testing", "API Testing", "E2E Testing"],
    operatingSystems: ["Windows", "macOS", "Linux", "Cross-Platform"],
    codingRequirements: ["Scripting"],
    codingLanguages: ["JavaScript", "Python", "Java", "C#"],
    pricingModels: ["Open Source"],
    reportingAnalytics: ["Advanced", "Integration-friendly"],
    strengths: ["Modern architecture", "Auto-waits and rich selectors", "Cross-browser and cross-language"],
    weaknesses: ["Younger community than Selenium", "Can be resource-intensive"],
    pdfLink: "/pdfs/playwright-guide.pdf",
    websiteUrl: "https://playwright.dev/",
    roiProjection: [
      { month: 1, roi: 60 }, { month: 2, roi: 68 }, { month: 3, roi: 75 },
      { month: 4, roi: 82 }, { month: 5, roi: 88 }, { month: 6, roi: 90 }
    ],
    initialSetupTime: "1-2 days",
    maintenanceOverhead: "Medium - Auto-waits reduce flakiness",
    testCreationSpeed: "High - Powerful selectors and tooling",
    scriptReusability: "High - Supports modern coding practices",
    parallelExecutionSupport: "Excellent - Built-in sharding and parallel capabilities",
    testCaseCreationEffort: "Moderate - Efficient scripting",
    skillRequirement: "Medium to High - Coding skills (JS, Python, etc.) beneficial",
    overallAutomationCoverage: "Very High - Handles complex scenarios well",
    totalCostOfOwnership: "Low to Medium - Open source, good developer experience",
  },
  {
    id: "3",
    name: "Cypress",
    score: 9.0,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "Cypress logo",
    applicationTypes: ["Web"],
    testTypes: ["UI Testing", "E2E Testing"],
    operatingSystems: ["Windows", "macOS", "Linux"],
    codingRequirements: ["Scripting"],
    codingLanguages: ["JavaScript"],
    pricingModels: ["Open Source", "Subscription"],
    reportingAnalytics: ["Advanced", "Real-time"],
    strengths: ["Fast and reliable test execution", "Excellent debugging tools", "Easy to set up"],
    weaknesses: ["Only supports JavaScript", "Limited cross-origin support in some cases"],
    pdfLink: "/pdfs/cypress-guide.pdf",
    websiteUrl: "https://www.cypress.io/",
    roiProjection: [
      { month: 1, roi: 55 }, { month: 2, roi: 65 }, { month: 3, roi: 72 },
      { month: 4, roi: 78 }, { month: 5, roi: 83 }, { month: 6, roi: 85 }
    ],
    initialSetupTime: "1 day",
    maintenanceOverhead: "Low to Medium - Good selector engine, time-travel debugging",
    testCreationSpeed: "Very High - Interactive runner, easy API",
    scriptReusability: "Medium to High - JavaScript ecosystem",
    parallelExecutionSupport: "Good - Via Cypress Dashboard (paid) or custom setup",
    testCaseCreationEffort: "Low to Moderate - Developer-friendly",
    skillRequirement: "Medium - JavaScript knowledge required",
    overallAutomationCoverage: "High - Primarily for web applications",
    totalCostOfOwnership: "Low (Open Source) to Medium (Dashboard)",
  },
  {
    id: "4",
    name: "Testim",
    score: 8.5,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "Testim logo",
    applicationTypes: ["Web"],
    testTypes: ["UI Testing", "E2E Testing"],
    operatingSystems: ["Cross-Platform"],
    codingRequirements: ["AI/ML", "Low-Code"],
    codingLanguages: ["JavaScript", "N/A"],
    pricingModels: ["Subscription"],
    reportingAnalytics: ["Advanced", "Customizable"],
    strengths: ["AI-powered locators for stability", "Fast authoring with record & playback", "Good for agile teams"],
    weaknesses: ["Can be expensive for large teams", "Some advanced scenarios may still require code"],
    pdfLink: "/pdfs/testim-guide.pdf",
    websiteUrl: "https://www.testim.io/",
    roiProjection: [
      { month: 1, roi: 65 }, { month: 2, roi: 72 }, { month: 3, roi: 78 },
      { month: 4, roi: 85 }, { month: 5, roi: 90 }, { month: 6, roi: 92 }
    ],
    initialSetupTime: "Less than 1 day",
    maintenanceOverhead: "Very Low - AI-powered self-healing locators",
    testCreationSpeed: "Very High - Record, playback, and AI suggestions",
    scriptReusability: "High - Reusable groups and components",
    parallelExecutionSupport: "Excellent - Cloud-based parallel execution",
    testCaseCreationEffort: "Very Low - Minimal coding required for most cases",
    skillRequirement: "Low - Suitable for manual testers and less technical users",
    overallAutomationCoverage: "High - Focus on UI and E2E for web",
    totalCostOfOwnership: "High - Subscription-based, depends on scale",
  },
  {
    id: "5",
    name: "Postman",
    score: 9.1,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "Postman logo",
    applicationTypes: ["API"],
    testTypes: ["API Testing"],
    operatingSystems: ["Windows", "macOS", "Linux", "Cross-Platform"],
    codingRequirements: ["Low-Code", "Scripting"],
    codingLanguages: ["JavaScript", "N/A"],
    pricingModels: ["Freemium", "Subscription"],
    reportingAnalytics: ["Advanced", "Integration-friendly"],
    strengths: ["User-friendly interface for API development and testing", "Collaboration features", "Extensive integrations"],
    weaknesses: ["Performance testing capabilities are basic", "Can become slow with large collections"],
    pdfLink: "/pdfs/postman-guide.pdf",
    websiteUrl: "https://www.postman.com/",
    roiProjection: [
      { month: 1, roi: 70 }, { month: 2, roi: 73 }, { month: 3, roi: 76 },
      { month: 4, roi: 78 }, { month: 5, roi: 80 }, { month: 6, roi: 81 }
    ],
    initialSetupTime: "Minutes to hours",
    maintenanceOverhead: "Low - GUI based, version control for collections",
    testCreationSpeed: "Very High - Easy to create requests and assertions",
    scriptReusability: "High - Collections, environments, variables",
    parallelExecutionSupport: "Good - Via Newman CLI and CI/CD integrations",
    testCaseCreationEffort: "Low - Primarily GUI-driven with scripting options",
    skillRequirement: "Low to Medium - Basic understanding of APIs, JS for advanced scripts",
    overallAutomationCoverage: "Very High - For API functional and integration testing",
    totalCostOfOwnership: "Low (Freemium) to Medium (Team/Enterprise)",
  },
  {
    id: "6",
    name: "JMeter",
    score: 8.3,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "JMeter logo",
    applicationTypes: ["Web", "API", "Backend"],
    testTypes: ["Performance Testing"],
    operatingSystems: ["Windows", "macOS", "Linux", "Cross-Platform"],
    codingRequirements: ["Scripting", "Low-Code"],
    codingLanguages: ["Java", "N/A"], // Groovy/BeanShell for scripting
    pricingModels: ["Open Source"],
    reportingAnalytics: ["Advanced", "Customizable"],
    strengths: ["Powerful and versatile for load testing", "Supports various protocols", "Extensible with plugins"],
    weaknesses: ["UI can be intimidating for beginners", "Requires significant resources for large tests"],
    pdfLink: "/pdfs/jmeter-guide.pdf",
    websiteUrl: "https://jmeter.apache.org/",
    roiProjection: [
      { month: 1, roi: 40 }, { month: 2, roi: 48 }, { month: 3, roi: 55 },
      { month: 4, roi: 60 }, { month: 5, roi: 65 }, { month: 6, roi: 70 }
    ],
    initialSetupTime: "2-3 days",
    maintenanceOverhead: "Medium - Test plans can become complex",
    testCreationSpeed: "Moderate - GUI with scripting elements",
    scriptReusability: "Medium - Test fragments and modules",
    parallelExecutionSupport: "Good - Distributed testing setup",
    testCaseCreationEffort: "Moderate - Requires understanding of performance concepts",
    skillRequirement: "Medium to High - Performance testing knowledge, some scripting",
    overallAutomationCoverage: "High - For performance, load, and stress testing",
    totalCostOfOwnership: "Low - Open source, but infra for distributed tests costs",
  },
  {
    id: "7",
    name: "Katalon Studio",
    score: 8.6,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "Katalon Studio logo",
    applicationTypes: ["Web", "Mobile", "API", "Desktop"],
    testTypes: ["UI Testing", "API Testing", "E2E Testing"],
    operatingSystems: ["Windows", "macOS", "Linux"],
    codingRequirements: ["Low-Code", "Scripting"],
    codingLanguages: ["Java"], // Primarily Groovy, but Java is also supported
    pricingModels: ["Freemium", "Subscription"],
    reportingAnalytics: ["Advanced", "Integration-friendly"],
    strengths: ["Comprehensive feature set", "Supports multiple application types", "Good for beginners and experienced testers"],
    weaknesses: ["Can be slower than some specialized tools", "Enterprise features are paid"],
    pdfLink: "/pdfs/katalon-guide.pdf",
    websiteUrl: "https://katalon.com/",
    roiProjection: [
      { month: 1, roi: 58 }, { month: 2, roi: 63 }, { month: 3, roi: 68 },
      { month: 4, roi: 72 }, { month: 5, roi: 76 }, { month: 6, roi: 78 }
    ],
    initialSetupTime: "1-2 days",
    maintenanceOverhead: "Medium - Object repository helps, but UI changes impact",
    testCreationSpeed: "High - Record/playback, manual mode, script mode",
    scriptReusability: "High - Keywords, test listeners, page object model support",
    parallelExecutionSupport: "Good - Via TestOps (paid) or custom configuration",
    testCaseCreationEffort: "Low to Moderate - Versatile options",
    skillRequirement: "Low to Medium - Groovy/Java for advanced scripting",
    overallAutomationCoverage: "Very High - Broad application type support",
    totalCostOfOwnership: "Medium - Freemium with paid enterprise features",
  },
   {
    id: "8",
    name: "Appium",
    score: 8.8,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "Appium logo",
    applicationTypes: ["Mobile"],
    testTypes: ["UI Testing", "E2E Testing"],
    operatingSystems: ["Android", "iOS", "Cross-Platform"],
    codingRequirements: ["Scripting"],
    codingLanguages: ["Java", "Python", "JavaScript", "Ruby", "C#"],
    pricingModels: ["Open Source"],
    reportingAnalytics: ["Basic", "Integration-friendly"],
    strengths: ["Cross-platform mobile testing", "Supports native, hybrid, and mobile web apps", "Large community"],
    weaknesses: ["Setup can be challenging", "Execution speed can vary"],
    pdfLink: "/pdfs/appium-guide.pdf",
    websiteUrl: "https://appium.io/",
    roiProjection: [
      { month: 1, roi: 52 }, { month: 2, roi: 60 }, { month: 3, roi: 67 },
      { month: 4, roi: 73 }, { month: 5, roi: 78 }, { month: 6, roi: 82 }
    ],
    initialSetupTime: "3-5 days",
    maintenanceOverhead: "High - Mobile flakiness, OS updates",
    testCreationSpeed: "Moderate - Requires robust locator strategies",
    scriptReusability: "Medium to High - With good framework design",
    parallelExecutionSupport: "Good - With Selenium Grid or cloud mobile device farms",
    testCaseCreationEffort: "Moderate to High - Scripting for mobile interactions",
    skillRequirement: "High - Mobile automation concepts, coding skills",
    overallAutomationCoverage: "High - For native and hybrid mobile apps",
    totalCostOfOwnership: "Medium - Open source, but device farm/cloud costs",
  },
  {
    id: "9",
    name: "Robot Framework",
    score: 8.4,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "Robot Framework logo",
    applicationTypes: ["Web", "API", "Desktop"],
    testTypes: ["UI Testing", "API Testing", "E2E Testing"],
    operatingSystems: ["Windows", "macOS", "Linux", "Cross-Platform"],
    codingRequirements: ["Low-Code", "Scripting"],
    codingLanguages: ["Python"],
    pricingModels: ["Open Source"],
    reportingAnalytics: ["Advanced", "Customizable"],
    strengths: ["Keyword-driven approach", "Highly extensible with Python libraries", "Readable test cases"],
    weaknesses: ["Can be slower for complex UI tests", "Steeper learning curve for advanced customization"],
    pdfLink: "/pdfs/robotframework-guide.pdf",
    websiteUrl: "https://robotframework.org/",
    roiProjection: [
      { month: 1, roi: 45 }, { month: 2, roi: 53 }, { month: 3, roi: 60 },
      { month: 4, roi: 68 }, { month: 5, roi: 72 }, { month: 6, roi: 75 }
    ],
    initialSetupTime: "2-4 days",
    maintenanceOverhead: "Medium - Keyword changes can impact many tests",
    testCreationSpeed: "High - Using existing keywords; Moderate - Creating new keywords",
    scriptReusability: "Very High - Keywords are designed for reuse",
    parallelExecutionSupport: "Good - Via Pabot or custom solutions",
    testCaseCreationEffort: "Low to Moderate - Keyword-driven",
    skillRequirement: "Medium - Python for custom library development",
    overallAutomationCoverage: "Very High - Versatile through libraries",
    totalCostOfOwnership: "Low - Open source, Python ecosystem",
  },
  {
    id: "10",
    name: "TestComplete",
    score: 8.2,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "TestComplete logo",
    applicationTypes: ["Web", "Mobile", "Desktop"],
    testTypes: ["UI Testing", "E2E Testing"],
    operatingSystems: ["Windows"], // Primarily Windows, with some cross-browser/mobile capabilities
    codingRequirements: ["Low-Code", "Scripting"],
    codingLanguages: ["JavaScript", "Python", "VBScript", "JScript", "DelphiScript"],
    pricingModels: ["Subscription", "One-time Purchase"],
    reportingAnalytics: ["Advanced", "Customizable"],
    strengths: ["Strong object recognition", "Supports a wide range of desktop applications", "Record and playback features"],
    weaknesses: ["Primarily Windows-focused", "Can be expensive", "UI feels a bit dated"],
    pdfLink: "/pdfs/testcomplete-guide.pdf",
    websiteUrl: "https://smartbear.com/product/testcomplete/",
    roiProjection: [
      { month: 1, roi: 50 }, { month: 2, roi: 58 }, { month: 3, roi: 65 },
      { month: 4, roi: 70 }, { month: 5, roi: 74 }, { month: 6, roi: 77 }
    ],
    initialSetupTime: "1-3 days",
    maintenanceOverhead: "Medium to High - Depends on application stability",
    testCreationSpeed: "High - Record/playback and scripting",
    scriptReusability: "Medium - Via script libraries and routines",
    parallelExecutionSupport: "Good - With TestExecute and integrations",
    testCaseCreationEffort: "Low to Moderate - Versatile scripting options",
    skillRequirement: "Medium - Scripting knowledge beneficial",
    overallAutomationCoverage: "High - Especially for Windows desktop apps",
    totalCostOfOwnership: "High - Commercial tool with licensing costs",
  },
  {
    id: "11",
    name: "ZapTest",
    score: 7.9,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "ZapTest logo",
    applicationTypes: ["Web", "Mobile", "API", "Desktop", "Backend"],
    testTypes: ["UI Testing", "API Testing", "Performance Testing", "E2E Testing"],
    operatingSystems: ["Windows", "macOS", "Linux", "Android", "iOS", "Cross-Platform"],
    codingRequirements: ["No-Code", "Low-Code"],
    codingLanguages: ["N/A"],
    pricingModels: ["Subscription", "Freemium"], // They have a free edition
    reportingAnalytics: ["Advanced", "Real-time"],
    strengths: ["1SCRIPT technology for cross-platform", "AI and computer vision", "Good for RPA and test automation"],
    weaknesses: ["Smaller community compared to giants", "Can be resource-intensive for complex scenarios"],
    pdfLink: "/pdfs/zaptest-guide.pdf",
    websiteUrl: "https://www.zaptest.com/",
    roiProjection: [
      { month: 1, roi: 62 }, { month: 2, roi: 69 }, { month: 3, roi: 74 },
      { month: 4, roi: 79 }, { month: 5, roi: 83 }, { month: 6, roi: 86 }
    ],
    initialSetupTime: "Less than 1 day",
    maintenanceOverhead: "Low - Designed for script stability",
    testCreationSpeed: "Very High - Visual and no-code approach",
    scriptReusability: "Very High - 1SCRIPT for multiple platforms",
    parallelExecutionSupport: "Excellent - Built-in parallel execution",
    testCaseCreationEffort: "Very Low - Primarily visual",
    skillRequirement: "Low - Suitable for non-programmers",
    overallAutomationCoverage: "Very High - Broad platform support",
    totalCostOfOwnership: "Medium to High - Subscription, but potential for quick ROI",
  },
  {
    id: "12",
    name: "Ranorex Studio",
    score: 8.1,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "Ranorex logo",
    applicationTypes: ["Web", "Mobile", "Desktop"],
    testTypes: ["UI Testing", "E2E Testing"],
    operatingSystems: ["Windows"], // Test creation on Windows, execution on other platforms with agents
    codingRequirements: ["Low-Code", "Scripting"],
    codingLanguages: ["C#", "VB.NET"],
    pricingModels: ["Subscription"],
    reportingAnalytics: ["Advanced", "Customizable"],
    strengths: ["Reliable object identification", "Good for desktop and web UI automation", "User-friendly for non-programmers"],
    weaknesses: ["Windows-centric for test creation", "Licensing can be costly"],
    pdfLink: "/pdfs/ranorex-guide.pdf",
    websiteUrl: "https://www.ranorex.com/",
    roiProjection: [
      { month: 1, roi: 53 }, { month: 2, roi: 60 }, { month: 3, roi: 66 },
      { month: 4, roi: 71 }, { month: 5, roi: 75 }, { month: 6, roi: 78 }
    ],
    initialSetupTime: "1-2 days",
    maintenanceOverhead: "Medium - Relies on Ranorex Spy for object mapping",
    testCreationSpeed: "High - Record/playback and action-based editor",
    scriptReusability: "High - Reusable modules and code libraries",
    parallelExecutionSupport: "Good - With Ranorex Parallel Runner",
    testCaseCreationEffort: "Low to Moderate",
    skillRequirement: "Low to Medium - C#/VB.NET for advanced scripts",
    overallAutomationCoverage: "High - Strong for UI-heavy apps",
    totalCostOfOwnership: "High - Commercial tool",
  },
  {
    id: "13",
    name: "Maestro (Mobile)",
    score: 8.9,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "Maestro mobile logo",
    applicationTypes: ["Mobile"],
    testTypes: ["UI Testing", "E2E Testing"],
    operatingSystems: ["Android", "iOS", "Cross-Platform"], // Test flows are cross-platform
    codingRequirements: ["No-Code", "Low-Code"], // YAML based flows
    codingLanguages: ["N/A"],
    pricingModels: ["Open Source", "Subscription"], // Maestro Studio is free, Cloud is paid
    reportingAnalytics: ["Basic", "Integration-friendly"], // Via Maestro Cloud
    strengths: ["Simple YAML-based test authoring", "Fast and reliable execution on mobile", "Excellent developer experience"],
    weaknesses: ["Relatively new, smaller ecosystem than Appium", "Advanced reporting relies on Maestro Cloud"],
    pdfLink: "/pdfs/maestro-guide.pdf",
    websiteUrl: "https://maestro.mobile.dev/",
    roiProjection: [
      { month: 1, roi: 68 }, { month: 2, roi: 75 }, { month: 3, roi: 80 },
      { month: 4, roi: 85 }, { month: 5, roi: 88 }, { month: 6, roi: 91 }
    ],
    initialSetupTime: "Less than 1 day",
    maintenanceOverhead: "Very Low - Robust locators and simple flows",
    testCreationSpeed: "Very High - Easy to write and understand YAML flows",
    scriptReusability: "High - Sub-flows and conditional logic",
    parallelExecutionSupport: "Good - Via Maestro Cloud or custom scripting",
    testCaseCreationEffort: "Very Low - YAML based",
    skillRequirement: "Low - Basic understanding of YAML and mobile interactions",
    overallAutomationCoverage: "High - For UI and E2E testing of mobile apps",
    totalCostOfOwnership: "Low (Open Source) to Medium (Cloud)",
  },
  {
    id: "14",
    name: "AI TestGen Pro",
    score: 9.3,
    logoUrl: "https://placehold.co/60x60.png",
    dataAiHint: "AI TestGen Pro logo",
    applicationTypes: ["Web", "API"],
    testTypes: ["UI Testing", "API Testing", "Unit Testing", "E2E Testing"],
    operatingSystems: ["Cross-Platform"],
    codingRequirements: ["AI/ML"],
    codingLanguages: ["N/A"],
    pricingModels: ["Subscription"],
    reportingAnalytics: ["Real-time", "Predictive Analytics"],
    strengths: ["Generates test cases from requirements/user stories", "AI-driven test data generation", "Self-healing tests with advanced locators"],
    weaknesses: ["Can be a 'black box' if AI decisions aren't clear", "Subscription cost", "Requires good initial input for AI to be effective"],
    pdfLink: "/pdfs/aitestgenpro-guide.pdf",
    websiteUrl: "https://example.com/aitestgenpro",
    roiProjection: [
      { month: 1, roi: 70 }, { month: 2, roi: 78 }, { month: 3, roi: 85 },
      { month: 4, roi: 90 }, { month: 5, roi: 94 }, { month: 6, roi: 96 }
    ],
    initialSetupTime: "1 day (integration and AI model training)",
    maintenanceOverhead: "Very Low - AI handles most maintenance",
    testCreationSpeed: "Extremely High - AI generates tests",
    scriptReusability: "N/A (AI handles generation)",
    parallelExecutionSupport: "Excellent - Cloud native",
    testCaseCreationEffort: "Minimal - Define requirements, AI generates",
    skillRequirement: "Low to Medium - Understanding requirements, configuring AI",
    overallAutomationCoverage: "Very High - Adapts to various test types",
    totalCostOfOwnership: "Medium to High - Subscription, but high efficiency gains",
  }
];

export const trendDataPerTestType: TrendData = {
  "UI Testing": {
    testType: "UI Testing",
    mostWidelyUsedTool: "Selenium",
    trendingTool: "Playwright",
    topRatedTool: "Cypress",
    aiPoweredTool: "Testim",
    enterpriseReadyTool: "Katalon Studio",
  },
  "API Testing": {
    testType: "API Testing",
    mostWidelyUsedTool: "Postman",
    trendingTool: "Playwright", 
    topRatedTool: "Postman", 
    aiPoweredTool: "AI TestGen Pro", // Updated
    enterpriseReadyTool: "Katalon Studio", 
  },
  "Performance Testing": {
    testType: "Performance Testing",
    mostWidelyUsedTool: "JMeter",
    trendingTool: "k6",
    topRatedTool: "Grafana k6", 
    aiPoweredTool: "LoadNinja", 
    enterpriseReadyTool: "LoadRunner",
  },
    "Security Testing": {
    testType: "Security Testing",
    mostWidelyUsedTool: "OWASP ZAP",
    trendingTool: "Burp Suite",
    topRatedTool: "Burp Suite Professional",
    aiPoweredTool: "Invicti (formerly Netsparker)",
    enterpriseReadyTool: "Veracode",
  },
  "Unit Testing": {
    testType: "Unit Testing",
    mostWidelyUsedTool: "JUnit (Java), PyTest (Python), Jest (JS)", 
    trendingTool: "Jest (JS), Mockito (Java)",
    topRatedTool: "PyTest (Python)",
    aiPoweredTool: "GitHub Copilot (assists writing tests)", // or AI TestGen Pro for generation
    enterpriseReadyTool: "Language-specific frameworks (e.g. NUnit for C#)",
  },
  "E2E Testing": {
    testType: "E2E Testing",
    mostWidelyUsedTool: "Selenium",
    trendingTool: "Playwright",
    topRatedTool: "Cypress",
    aiPoweredTool: "Testim or AI TestGen Pro", // Updated
    enterpriseReadyTool: "Katalon Studio or ZapTest", // Updated
  },
  "Default": { 
    testType: "General Testing",
    mostWidelyUsedTool: "Selenium",
    trendingTool: "Playwright",
    topRatedTool: "Cypress",
    aiPoweredTool: "Testim",
    enterpriseReadyTool: "Katalon Studio",
  }
};

export const comparisonParametersData: ComparisonParameter[] = [
  { key: "initialSetupTime", label: "Initial Setup Time" },
  { key: "maintenanceOverhead", label: "Maintenance Overhead" },
  { key: "testCreationSpeed", label: "Test Creation Speed" },
  { key: "scriptReusability", label: "Script Reusability" },
  { key: "parallelExecutionSupport", label: "Parallel Execution Support" },
  { key: "testCaseCreationEffort", label: "Test Case Creation Effort" },
  { key: "skillRequirement", label: "Skill Requirement" },
  { key: "overallAutomationCoverage", label: "Overall Automation Coverage" },
  { key: "totalCostOfOwnership", label: "Total Cost of Ownership" },
];

